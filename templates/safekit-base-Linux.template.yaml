AWSTemplateFormatVersion: '2010-09-09'
Description: SafeKit Linux EC2 instance subtemplate
Parameters:
  AvailabilityZone:
    Description: Choose an Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet:
    Description: ID of the Public Subnet
    Type: String
  PrivateAddr:
    Description: Instance Private Address
    Type: String
  EIPAllocationId:
    Description: AllocationId of the EIP to associate with this Instance
    Type: String
  SecurityGroup:
    Description: ID of the Security Group
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    Default: t2.micro
    Type: String
  InstanceNum:
    Type: String
  InstanceName:
    Type: String
  StackInstanceProfile:
    Type: String
  StackInstanceRole:
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your EC2
      instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  CAservPwd:
    Type: String
  ClusterFile:
    Type: String
    Default: ''
  ConfigScript:
    Type: String
    Default: "#!/bin/bash\n"
  ConsoleAddrList:
    Type: String
    Default: ''
  CommandAddrList:
    Type: String
    Default: ''
  IpNamesList:
    Type: String
    Default: ''
  SafekitModuleURL:
    Default: none
    Type: String
  SafekitModuleName:
    Default: none
    Type: String
  CertificateCN:
    Default: "SafeKit"
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
      Default: 'us-east-1'
      Description: 'The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.'
      Type: String
  QSS3KeyPrefix:
      AllowedPattern: '^[0-9a-zA-Z-/]*$'
      ConstraintDescription:
        Quick Start key prefix can include numbers, lowercase letters,
        uppercase letters, hyphens (-), and forward slash (/).
      Default: quickstart-evidian-safekit/
      Description:
        S3 key prefix for the Quick Start assets. Quick Start key prefix
        can include numbers, lowercase letters, uppercase letters, hyphens (-), and
        forward slash (/).
      Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  FirstInstance: !Equals
    - !Ref 'InstanceNum'
    - '1'
  ModuleNOK: !Equals
    - !Ref 'SafekitModuleName'
    - none
  ModuleCond: !Equals
    - !Ref 'SafekitModuleName'
    - farm
Mappings:
  AWSAMIRegionMap:
    eu-north-1:
      AMZNLINUX2: ami-0b7a46b4bd694e8a6
    ap-south-1:
      AMZNLINUX2: ami-0470e33cd681b2476
    eu-west-3:
      AMZNLINUX2: ami-00077e3fed5089981
    eu-west-2:
      AMZNLINUX2: ami-01a6e31ac994bbc09
    eu-west-1:
      AMZNLINUX2: ami-06ce3edf0cff21f07
    ap-northeast-2:
      AMZNLINUX2: ami-01288945bd24ed49a
    ap-northeast-1:
      AMZNLINUX2: ami-0f310fced6141e627
    sa-east-1:
      AMZNLINUX2: ami-003449ffb2605a74c
    ca-central-1:
      AMZNLINUX2: ami-054362537f5132ce2
    ap-southeast-1:
      AMZNLINUX2: ami-0ec225b5e01ccb706
    ap-southeast-2:
      AMZNLINUX2: ami-0970010f37c4f9c8d
    eu-central-1:
      AMZNLINUX2: ami-076431be05aaf8080
    us-east-1:
      AMZNLINUX2: ami-0323c3dd2da7fb37d
    us-east-2:
      AMZNLINUX2: ami-0f7919c33c90f5b58
    us-west-1:
      AMZNLINUX2: ami-06fcc1f0bc2c8943f
    us-west-2:
      AMZNLINUX2: ami-0d6621c01e8c2de2c
Resources:
  SafeKitServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref 'AvailabilityZone'
      Tags:
        - Key: Name
          Value: !Ref 'InstanceName'
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - AMZNLINUX2
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyPairName'
      IamInstanceProfile: !Ref 'StackInstanceProfile'
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref 'PublicSubnet'
          PrivateIpAddress: !Ref 'PrivateAddr'
          GroupSet:
            - !Ref 'SecurityGroup'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "#!/bin/bash -ex\n"
            - "yum install -y aws-cfn-bootstrap\n"
            - "wget --no-verbose --retry-connrefused  --random-wait -O /tmp/safekit.bin "
            - "https://support.evidian.com/solutions/downloads/safekit/cloud/platforms/linux/current_versions/safekit_cloud.bin\n"
            - "cd /tmp\n"
            - "chmod +x safekit.bin\n"
            - "./safekit.bin\n"
            - "yum localinstall -y safekit_x86_64_*.rpm\n"
            - !Sub '/opt/aws/bin/cfn-init -v --stack "${AWS::StackName}" --resource SafeKitServer --configsets '
            - !If
              - FirstInstance
              - !If
                - ModuleNOK
                - InstallCluster
                - InstallModule
              - InstallBase
            - !Sub ' --region ${AWS::Region}'
            - "\n"
              # Signal the status from cfn-init
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource SafeKitServer'
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
            - "\n"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref 'StackInstanceRole'
          buckets: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        configSets:
          InstallBase:
            - SafeKitInstall
            - PostConfig
          InstallCluster:
            - SafeKitInstall
            - MasterConfig
            - PostConfig
          InstallModule:
            - SafeKitInstall
            - MasterConfig
            - ModuleConfig
            - PostConfig
        SafeKitInstall:
          commands:
            caservstart:
              cwd: /opt/safekit/web/bin
              command: !Sub './startcaserv ${CAservPwd}'
        MasterConfig:
          files:
            /tmp/userconfig.xml: !If
              - ModuleCond
              - source:
                  !Sub
                    - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/userconfig-farm.xml'
                    - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                      S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
                authentication: S3AccessCreds
              - source:
                  !Sub
                    - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/userconfig-mirror-Linux.xml'
                    - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                      S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
                authentication: S3AccessCreds
            /var/safekit/cluster/cluster.xml:
              content: !Ref 'ClusterFile'
              mode: '000664'
              owner: safekit
              group: safekit
            /opt/safekit/web/conf/ipnames.json:
              content: !Ref 'IpNamesList'
              mode: '000444'
              owner: safekit
              group: safekit
            /opt/safekit/web/conf/ipv6.json:
              content: "[\nnull\n]"
              mode: '000444'
              owner: safekit
              group: safekit
            /opt/safekit/web/conf/ipv4.json:
              content: !Ref 'ConsoleAddrList'
              mode: '000444'
              owner: safekit
              group: safekit
            /opt/safekit/web/conf/cmdaddr.json:
              content: !Ref 'CommandAddrList'
              mode: '000444'
              owner: safekit
              group: safekit
            /opt/safekit/web/bin/uploadcerts:
              content: !Join
                - "\n"
                - - "#!/bin/bash -ev"
                  - cd /opt/safekit/web/bin
                  - export LD_LIBRARY_PATH=/opt/safekit/private/bin
                  - !Sub './initssl sca "/CN=${CertificateCN}"'
                  - !Sub 'userpwd=CA_admin:${CAservPwd}'
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F action=swhttps
                    https://localhost:9001/caserv
                  - for targetip in `cat /opt/safekit/web/conf/cmdaddr.json | awk
                    '/".*",/{ print substr($1,2,length($1)-3);}'`; do
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CA -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CCA -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/server.crt
                    -F action=import -F target=T_SC -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/server.key
                    -F action=import -F target=T_SK -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/admin.crt
                    -F action=import -F target=T_CC -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/admin.key
                    -F action=import -F target=T_CK -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/proxy.crtkey
                    -F action=import -F target=T_PCCK -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F file=@/opt/safekit/web/conf/sslclient.crl
                    -F action=import -F target=T_CRL -F add=yes https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F action=swhttps
                    https://$targetip:9001/caserv
                  - /opt/safekit/private/bin/curl.exe -k -u $userpwd -X POST -F action=shutdown
                    https://$targetip:9001/caserv
                  - done
              mode: '000774'
              owner: safekit
              group: safekit
          commands:
            1-uploadcerts:
              command: /opt/safekit/web/bin/uploadcerts
            2-clusterconf:
              command: /opt/safekit/safekit cluster config
            3-clusterdeploy:
              command: /opt/safekit/safekit -H "*" -G
        ModuleConfig:
          commands:
            1-moduledoanload:
              command: !Sub '/opt/safekit/safekit -r curl.exe --insecure --output
                /var/safekit/tmp/module.safe "${SafekitModuleURL}"'
            2-moduleinstall:
              command: !Sub '/opt/safekit/safekit module install -m ${SafekitModuleName}
                /var/safekit/tmp/module.safe'
            3-modulecleaninstall:
              command: rm -f /var/safekit/tmp/module.safe
        PostConfig:
          files:
            /var/safekit/tmp/safeconfig.sh:
              content: !Ref 'ConfigScript'
              mode: '000554'
              owner: safekit
              group: safekit
          commands:
            1-postconfig:
              command: /var/safekit/tmp/safeconfig.sh
  EIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'SafeKitServer'
      AllocationId: !Ref 'EIPAllocationId'
Outputs:
  InstanceId:
    Description: Id of instance
    Value: !Ref 'SafeKitServer'
