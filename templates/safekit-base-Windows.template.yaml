AWSTemplateFormatVersion: '2010-09-09'
Description: SafeKit Windows2016 EC2 instance subtemplate
Parameters:
  AvailabilityZone:
    Description: Choose an Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet:
    Description: ID of the Public Subnet
    Type: String
  EIPAllocationId:
    Description: AllocationId of the EIP to associate with this Instance
    Type: String
  SecurityGroup:
    Description: ID of the Security Group
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    Default: t2.micro
    Type: String
  InstanceNum:
    Type: String
  InstanceName:
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your EC2
      instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  CAservPwd:
    Type: String
  CompletionHandle:
    Type: String
  ClusterFile:
    Type: String
    Default: ''
  ConfigScript:
    Type: String
    Default: "#\n#\n"
  ConsoleAddrList:
    Type: String
    Default: ''
  CommandAddrList:
    Type: String
    Default: ''
  IpNamesList:
    Type: String
    Default: ''
  SafekitModuleURL:
    Default: none
    Type: String
  SafekitModuleName:
    Default: none
    Type: String
  CertificateCN:
    Default: SafeKit
    Type: String
Conditions:
  FirstInstance: !Equals
    - !Ref 'InstanceNum'
    - '1'
  ModuleNOK: !Equals
    - !Ref 'SafekitModuleName'
    - none
Mappings:
  AWSAMIRegionMap:
    AMI:
      WS2016FULLBASE: Windows_Server-2016-English-Full-Base-2019.02.13
    ap-northeast-1:
      WS2016FULLBASE: ami-0644ce62fdce33d7a
    ap-northeast-2:
      WS2016FULLBASE: ami-0b06750f7ff166ef5
    ap-south-1:
      WS2016FULLBASE: ami-0be56865bcf08da0d
    ap-southeast-1:
      WS2016FULLBASE: ami-0611ad6dad5ec3418
    ap-southeast-2:
      WS2016FULLBASE: ami-0148c6490018d612f
    ca-central-1:
      WS2016FULLBASE: ami-09b27c4b76404544f
    eu-central-1:
      WS2016FULLBASE: ami-083c458e2cc1adc40
    eu-west-1:
      WS2016FULLBASE: ami-0e60ba06451c1b981
    eu-west-2:
      WS2016FULLBASE: ami-0186531b707ced2ef
    eu-west-3:
      WS2016FULLBASE: ami-04f6c3a108e0d348b
    sa-east-1:
      WS2016FULLBASE: ami-05c6c992668058be2
    us-east-1:
      WS2016FULLBASE: ami-09d496c26aa745869
    us-east-2:
      WS2016FULLBASE: ami-08b4a0f6e106c1dba
    us-west-1:
      WS2016FULLBASE: ami-0f825806081c4725c
    us-west-2:
      WS2016FULLBASE: ami-0af80d239cc063c12
Resources:
  SafeKitServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref 'AvailabilityZone'
      Tags:
        - Key: Name
          Value: !Ref 'InstanceName'
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - WS2016FULLBASE
      InstanceType: !Ref 'InstanceType'
      KeyName: !Ref 'KeyPairName'
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref 'PublicSubnet'
          PrivateIpAddress: !Sub '10.0.${InstanceNum}.10'
          GroupSet:
            - !Ref 'SecurityGroup'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<script>\n"
            - !Sub 'cfn-init.exe -v -s ${AWS::StackId} --region ${AWS::Region} -r SafeKitServer --configsets '
            - !If
              - FirstInstance
              - !If
                - ModuleNOK
                - InstallCluster
                - InstallModule
              - InstallBase
            - "\n"
            - !Sub
              - cfn-signal.exe -e %errorlevel% ${WHUrl}
              - WHUrl: !Base64
                  Ref: CompletionHandle
            - "\n"
            - "</script>\n"
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          InstallBase:
            - SafeKitInstall
            - PostConfig
          InstallCluster:
            - SafeKitInstall
            - MasterConfig
            - PostConfig
          InstallModule:
            - SafeKitInstall
            - MasterConfig
            - ModuleInstall
            - PostConfig
        SafeKitInstall:
          packages:
            msi:
              safekit: https://support.evidian.com/solutions/downloads/safekit/cloud/platforms/windows/current_versions/safekit_cloud.msi
          commands:
            1-stop:
              command: net stop safeadmin
              waitAfterCompletion: '0'
            2-start:
              command: net start safeadmin
              waitAfterCompletion: '0'
            3-firewall:
              command: \safekit\private\bin\firewallcfg add
              waitAfterCompletion: '0'
            4-caservstart:
              cwd: \safekit\web\bin
              command: !Sub 'startcaserv.cmd ${CAservPwd}'
        MasterConfig:
          files:
            \safekit\var\cluster\cluster.xml:
              content: !Ref 'ClusterFile'
            \safekit\web\conf\ipnames.json:
              content: !Ref 'IpNamesList'
            \safekit\web\conf\ipv6.json:
              content: "[\nnull\n]"
            \safekit\web\conf\ipv4.json:
              content: !Ref 'ConsoleAddrList'
            \safekit\web\conf\cmdaddr.json:
              content: !Ref 'CommandAddrList'
            \safekit\web\bin\uploadcerts.ps1:
              content: !Join
                - "\n"
                - - 'cd /safekit/web/bin'
                  - !Sub '& ./initssl sca "/CN=${CertificateCN}"'
                  - !Sub '$userpwd="CA_admin:${CAservPwd}"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=swhttps
                    https://localhost:9001/caserv'
                  - "$cmdip=(Get-Content -Path /safekit/web/conf/cmdaddr.json) | ConvertFrom-Json" 
                  - "$cmdip | % { if($_){"
                  - "$targetip=$_"
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CA -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CCA -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/server.crt
                    -F action=import -F target=T_SC -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/server.key
                    -F action=import -F target=T_SK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/admin.crt
                    -F action=import -F target=T_CC -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/admin.key
                    -F action=import -F target=T_CK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/proxy.crtkey
                    -F action=import -F target=T_PCCK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/sslclient.crl
                    -F action=import -F target=T_CRL -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=swhttps
                    "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=shutdown
                    "https://$targetip:9001/caserv"'
                  - '}}'
          commands:
            1-uploadcerts:
              command: powershell.exe -Command \safekit\web\bin\uploadcerts.ps1
              waitAfterCompletion: '0'
            2-clusterconf:
              command: \safekit\safekit cluster config
              waitAfterCompletion: '0'
            3-clusterdeploy:
              command: \safekit\safekit -H "*" -G
              waitAfterCompletion: '0'
        ModuleInstall:
          commands:
            1-moduledownload:
              command: !Sub '\safekit\safekit -r curl.exe --insecure --output \safekit\var\tmp\module.safe  ${SafekitModuleURL}'
              waitAfterCompletion: '0'
            2-moduleinstall:
              command: !Sub '\safekit\safekit module install -m ${SafekitModuleName}
                \safekit\var\tmp\module.safe'
              waitAfterCompletion: '0'
            3-modulecleaninstall:
              command: del \safekit\var\tmp\module.safe
              waitAfterCompletion: '0'
        PostConfig:
          files:
            \safekit\var\tmp\safeconfig.ps1:
              content: !Ref 'ConfigScript'
          commands:
            1-postconfig:
              command: powershell.exe -Command \safekit\var\tmp\safeconfig.ps1
              waitAfterCompletion: '0'
  EIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'SafeKitServer'
      AllocationId: !Ref 'EIPAllocationId'
Outputs:
  InstanceId:
    Description: Id of instance
    Value: !Ref 'SafeKitServer'
