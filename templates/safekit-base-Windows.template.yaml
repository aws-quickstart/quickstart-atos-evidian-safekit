AWSTemplateFormatVersion: '2010-09-09'
Description: SafeKit Windows2016 EC2 instance subtemplate (qs-1qtdda1as)
Parameters:
  AvailabilityZone:
    Description: Choose an Availability Zone
    Type: AWS::EC2::AvailabilityZone::Name
  PublicSubnet:
    Description: ID of the Public Subnet
    Type: String
  PrivateAddr:
    Description: Instance Private Address
    Type: String
  EIPAllocationId:
    Description: AllocationId of the EIP to associate with this Instance
    Type: String
  SecurityGroup:
    Description: ID of the Security Group
    Type: AWS::EC2::SecurityGroup::Id
  InstanceType:
    Default: t2.micro
    Type: String
  InstanceNum:
    Type: String
  InstanceName:
    Type: String
  StackInstanceProfile:
    Type: String
  StackInstanceRole:
    Type: String
  KeyPairName:
    Description: Public/private key pairs allow you to securely connect to your EC2
      instance after it launches.
    Type: AWS::EC2::KeyPair::KeyName
  CAservPwd:
    Type: String
  ClusterFile:
    Type: String
    Default: ''
  ConfigScript:
    Type: String
    Default: "#\n#\n"
  ConsoleAddrList:
    Type: String
    Default: ''
  CommandAddrList:
    Type: String
    Default: ''
  IpNamesList:
    Type: String
    Default: ''
  SafekitModuleURL:
    Default: none
    Type: String
  SafekitModuleName:
    Default: none
    Type: String
  Userconfig:
    Default: none
    Type: String
  CertificateCN:
    Default: SafeKit
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Default: aws-quickstart
    Description:
      S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3BucketRegion:
      Default: us-east-1
      Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
      Type: String
  QSS3KeyPrefix:
      AllowedPattern: '^[0-9a-zA-Z-/]*$'
      ConstraintDescription:
        Quick Start key prefix can include numbers, lowercase letters,
        uppercase letters, hyphens (-), and forward slash (/).
      Default: quickstart-atos-evidian-safekit/
      Description:
        S3 key prefix for the Quick Start assets. Quick Start key prefix
        can include numbers, lowercase letters, uppercase letters, hyphens (-), and
        forward slash (/).
      Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  FirstInstance: !Equals
    - !Ref 'InstanceNum'
    - '1'
Mappings:
  AWSAMIRegionMap:
    eu-north-1:
      WS2019FULLBASE: ami-0007ae7a7ac1b2b23
    ap-south-1:
      WS2019FULLBASE: ami-0a647b8642eaade60
    eu-west-3:
      WS2019FULLBASE: ami-075f447b9d38f57e6
    eu-west-2:
      WS2019FULLBASE: ami-0f8d0019ef655a6a6
    eu-west-1:
      WS2019FULLBASE: ami-0aaada7cbb0d829fc
    ap-northeast-2:
      WS2019FULLBASE: ami-0f9d1de69243b61df
    ap-northeast-1:
      WS2019FULLBASE: ami-0677267cf17ab376d
    sa-east-1:
      WS2019FULLBASE: ami-005d7fbc589aaa6a8
    ca-central-1:
      WS2019FULLBASE: ami-0711d40e09bd4226e
    ap-southeast-1:
      WS2019FULLBASE: ami-0f2866fc0244e2798
    ap-southeast-2:
      WS2019FULLBASE: ami-0df33e36ca53be643
    eu-central-1:
      WS2019FULLBASE: ami-0f98c0d90570d0b21
    us-east-1:
      WS2019FULLBASE: ami-09d496c26aa745869
    us-east-2:
      WS2019FULLBASE: ami-07f3715a1f6dbb6d9
    us-west-1:
      WS2019FULLBASE: ami-0037082364387ada7
    us-west-2:
      WS2019FULLBASE: ami-0f467e652b07f3676
Resources:
  SafeKitServer:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Ref 'AvailabilityZone'
      Tags:
        - Key: Name
          Value: !Ref 'InstanceName'
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - WS2019FULLBASE
      InstanceType: !Ref 'InstanceType'
      IamInstanceProfile: !Ref 'StackInstanceProfile'
      KeyName: !Ref 'KeyPairName'
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref 'PublicSubnet'
          PrivateIpAddress: !Ref 'PrivateAddr'
          GroupSet:
            - !Ref 'SecurityGroup'
      UserData: !Base64
        Fn::Join:
          - ''
          - - "<script>\n"
            - !Sub 'cfn-init.exe -v -s ${AWS::StackId} --region ${AWS::Region} -r SafeKitServer --configsets '
            - !If [FirstInstance, InstallModule, InstallBase]
            - "\n"
              # Signal the status from cfn-init
            - 'cfn-signal.exe -e %errorlevel%  '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource SafeKitServer '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+
            - "\n"
            - "</script>\n"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Metadata:
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref StackInstanceRole
          buckets: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      AWS::CloudFormation::Init:
        configSets:
          InstallBase:
            - SafeKitInstall
            - PostConfig
          InstallModule:
            - SafeKitInstall
            - MasterConfig
            - ModuleInstall
            - PostConfig
        SafeKitInstall:
          packages:
            msi:
              safekit: https://support.evidian.com/solutions/downloads/safekit/cloud/platforms/windows/current_versions/safekit_cloud.msi
          commands:
            1-stop:
              command: net stop safeadmin
              waitAfterCompletion: '0'
            2-start:
              command: net start safeadmin
              waitAfterCompletion: '0'
            3-firewall:
              command: \safekit\private\bin\firewallcfg add
              waitAfterCompletion: '0'
            4-caservstart:
              cwd: \safekit\web\bin
              command: !Sub 'startcaserv.cmd ${CAservPwd}'
        MasterConfig:
          files:
            \safekit\var\tmp\userconfig.xml:
              source:
                !Sub
                - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}scripts/${Userconfig}'
                - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
                  S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              authentication: S3AccessCreds
            \safekit\var\cluster\cluster.xml:
              content: !Ref 'ClusterFile'
            \safekit\web\conf\ipnames.json:
              content: !Ref 'IpNamesList'
            \safekit\web\conf\ipv6.json:
              content: "[\nnull\n]"
            \safekit\web\conf\ipv4.json:
              content: !Ref 'ConsoleAddrList'
            \safekit\web\conf\cmdaddr.json:
              content: !Ref 'CommandAddrList'
            \safekit\web\bin\uploadcerts.ps1:
              content: !Join
                - "\n"
                - - 'cd /safekit/web/bin'
                  - !Sub '& ./initssl sca "/CN=${CertificateCN}"'
                  - !Sub '$userpwd="CA_admin:${CAservPwd}"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=swhttps
                    https://localhost:9001/caserv'
                  - "$cmdip=(Get-Content -Path /safekit/web/conf/cmdaddr.json) | ConvertFrom-Json"
                  - "$cmdip | % { if($_){"
                  - "$targetip=$_"
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CA -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/cacert.crt
                    -F action=import -F target=T_CCA -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/server.crt
                    -F action=import -F target=T_SC -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/server.key
                    -F action=import -F target=T_SK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/admin.crt
                    -F action=import -F target=T_CC -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/admin.key
                    -F action=import -F target=T_CK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/proxy.crtkey
                    -F action=import -F target=T_PCCK -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F file=@/safekit/web/conf/sslclient.crl
                    -F action=import -F target=T_CRL -F add=yes "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=swhttps
                    "https://$($targetip):9001/caserv"'
                  - '& /safekit/private/bin/curl.exe -k -u "$userpwd" -X POST -F action=shutdown
                    "https://$targetip:9001/caserv"'
                  - '}}'
          commands:
            1-uploadcerts:
              command: powershell.exe -Command \safekit\web\bin\uploadcerts.ps1
              waitAfterCompletion: '0'
            2-clusterconf:
              command: \safekit\safekit cluster config
              waitAfterCompletion: '0'
            3-clusterdeploy:
              command: \safekit\safekit -H "*" -G
              waitAfterCompletion: '0'
        ModuleInstall:
          commands:
            1-moduledownload:
              command: !Sub '\safekit\safekit -r curl.exe --insecure --output \safekit\var\tmp\module.safe  ${SafekitModuleURL}'
              waitAfterCompletion: '0'
            2-moduleinstall:
              command: !Sub '\safekit\safekit module install -m ${SafekitModuleName}
                \safekit\var\tmp\module.safe'
              waitAfterCompletion: '0'
            3-modulecleaninstall:
              command: del \safekit\var\tmp\module.safe
              waitAfterCompletion: '0'
        PostConfig:
          files:
            \safekit\var\tmp\safeconfig.ps1:
              content: !Ref 'ConfigScript'
          commands:
            1-postconfig:
              command: powershell.exe -Command \safekit\var\tmp\safeconfig.ps1
              waitAfterCompletion: '0'
  EIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref 'SafeKitServer'
      AllocationId: !Ref 'EIPAllocationId'
Outputs:
  InstanceId:
    Description: Id of instance
    Value: !Ref 'SafeKitServer'
